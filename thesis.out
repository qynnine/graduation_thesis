\BOOKMARK [0][-]{englishabstract.0}{Abstract}{}% 1
\BOOKMARK [0][-]{chapter*.1}{目录}{}% 2
\BOOKMARK [0][-]{chapter.1}{第一章  绪言}{}% 3
\BOOKMARK [1][-]{section.1.1}{1.1 研究背景}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.2}{1.2 本文组织}{chapter.1}% 5
\BOOKMARK [0][-]{chapter.2}{第二章  相关工作}{}% 6
\BOOKMARK [1][-]{section.2.1}{2.1 需求可追踪性的相关技术}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 需求可追踪性的基本概念}{section.2.1}% 8
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 研究现状}{section.2.1}% 9
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 基于信息检索的需求到代码间追踪关系生成技术}{section.2.1}% 10
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 结合代码文本与结构信息的追踪关系生成方法改进}{section.2.1}% 11
\BOOKMARK [1][-]{section.2.2}{2.2 过时需求自动检测的相关技术}{chapter.2}% 12
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 过时需求的基本概念}{section.2.2}% 13
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 基于代码变更的过时需求自动检测方法}{section.2.2}% 14
\BOOKMARK [1][-]{section.2.3}{2.3 本章小结}{chapter.2}% 15
\BOOKMARK [0][-]{chapter.3}{第三章  基于代码依赖紧密度分析改进需求可追踪性生成方法}{}% 16
\BOOKMARK [1][-]{section.3.1}{3.1 引言}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.2}{3.2 背景}{chapter.3}% 18
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 研究动机}{section.3.2}% 19
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 问题定义}{section.3.2}% 20
\BOOKMARK [1][-]{section.3.3}{3.3 方法概述}{chapter.3}% 21
\BOOKMARK [1][-]{section.3.4}{3.4 代码类间的依赖关系捕获与组织}{chapter.3}% 22
\BOOKMARK [1][-]{section.3.5}{3.5 代码依赖关系的紧密度计算}{chapter.3}% 23
\BOOKMARK [1][-]{section.3.6}{3.6 生成需求到代码的候选追踪关系}{chapter.3}% 24
\BOOKMARK [1][-]{section.3.7}{3.7 基于代码依赖关系紧密度的追踪关系重排序}{chapter.3}% 25
\BOOKMARK [2][-]{subsection.3.7.1}{3.7.1 建立初始需求域}{section.3.7}% 26
\BOOKMARK [2][-]{subsection.3.7.2}{3.7.2 重排序初始域外的追踪关系}{section.3.7}% 27
\BOOKMARK [1][-]{section.3.8}{3.8 实验与分析}{chapter.3}% 28
\BOOKMARK [2][-]{subsection.3.8.1}{3.8.1 实验系统及IR模型}{section.3.8}% 29
\BOOKMARK [2][-]{subsection.3.8.2}{3.8.2 评价指标}{section.3.8}% 30
\BOOKMARK [2][-]{subsection.3.8.3}{3.8.3 研究问题}{section.3.8}% 31
\BOOKMARK [2][-]{subsection.3.8.4}{3.8.4 实验结果与分析}{section.3.8}% 32
\BOOKMARK [1][-]{section.3.9}{3.9 本章小结}{chapter.3}% 33
\BOOKMARK [0][-]{chapter.4}{第四章  基于代码依赖关系的过时需求自动检测与更新推荐方法}{}% 34
\BOOKMARK [1][-]{section.4.1}{4.1 引言}{chapter.4}% 35
\BOOKMARK [1][-]{section.4.2}{4.2 背景}{chapter.4}% 36
\BOOKMARK [2][-]{subsection.4.2.1}{4.2.1 研究动机}{section.4.2}% 37
\BOOKMARK [2][-]{subsection.4.2.2}{4.2.2 问题定义}{section.4.2}% 38
\BOOKMARK [1][-]{section.4.3}{4.3 方法概述}{chapter.4}% 39
\BOOKMARK [1][-]{section.4.4}{4.4 代码依赖关系构成的代码变更组识别技术}{chapter.4}% 40
\BOOKMARK [2][-]{subsection.4.4.1}{4.4.1 比较代码元素的差异}{section.4.4}% 41
\BOOKMARK [2][-]{subsection.4.4.2}{4.4.2 构造变更组}{section.4.4}% 42
\BOOKMARK [1][-]{section.4.5}{4.5 基于变更组文本与需求文本相似性的过时需求自动检测方法}{chapter.4}% 43
\BOOKMARK [2][-]{subsection.4.5.1}{4.5.1 抽取关键词以构造变更组的描述文本}{section.4.5}% 44
\BOOKMARK [2][-]{subsection.4.5.2}{4.5.2 基于信息检索技术生成近似候选过时需求的排序}{section.4.5}% 45
\BOOKMARK [1][-]{section.4.6}{4.6 基于代码依赖关系与文本信息的过时需求半自动更新推荐机制}{chapter.4}% 46
\BOOKMARK [1][-]{section.4.7}{4.7 实验与分析}{chapter.4}% 47
\BOOKMARK [2][-]{subsection.4.7.1}{4.7.1 实验目标与评价指标}{section.4.7}% 48
\BOOKMARK [2][-]{subsection.4.7.2}{4.7.2 研究案例与实验设置}{section.4.7}% 49
\BOOKMARK [2][-]{subsection.4.7.3}{4.7.3 实验结果与结果分析}{section.4.7}% 50
\BOOKMARK [1][-]{section.4.8}{4.8 本章小结}{chapter.4}% 51
\BOOKMARK [0][-]{chapter.5}{第五章  总结与展望}{}% 52
\BOOKMARK [1][-]{section.5.1}{5.1 工作总结}{chapter.5}% 53
\BOOKMARK [1][-]{section.5.2}{5.2 研究展望}{chapter.5}% 54
\BOOKMARK [0][-]{chapter*.3}{简历与科研成果}{}% 55
\BOOKMARK [0][-]{chapter*.4}{参考文献}{}% 56
