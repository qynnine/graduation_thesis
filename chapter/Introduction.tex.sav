\chapter{绪言}

\section{研究背景}



随着计算机技术的发展，特别是近年来网络的普及，面向服务的计算（Service Oriented Computing,~SOC）~\cite{papazoglou2003service,papazoglou2008service,zhang2007services}~以其高效且灵活的特性，成为Internet 开放环境中，构建分布式应用与解决方案的一种重要方式。面向服务的计算作为一个新的计算规范，它将Web~服务作为构件，用以支持分布式应用的低成本快速开发~\cite{papazoglou2008web}~。目前，Web~服务作为实现面向服务计算的主流技术，同时也作为一种新型的分布式资源，在应用集成等领域，已吸引了工业界和学术界的众多目光。服务是自包含的模块，它们被部署在标准的中间件平台上，能够在网络上基于可扩展标记语言（Extensible Markup Language,~XML）~的技术进行描述、定位、编配和编程,并利用轻量级简单对象访问协议（Simple Object Access Protocol,~SOAP）~来支持其调用，极大的满足了分布式应用的集成需求。正是由于这种需求的促进，服务组合以及服务选择已成为Web~服务领域的重要研究内容。

服务组合技术是将多个功能单一的Web~服务组合起来以构造功能更强大的服务，来满足复杂的应用需求。然而随着提供相同功能的Web~服务越来越多，消费者已经不满足单纯功能性需求的实现，还希望其非功能性的需求得到满足。服务质量~（Quality of Service,~QoS）~通常用来描述Web~服务的非功能属性，例如：响应时间、吞吐量以及价格等~\cite{zeng2003quality}~。
因此，现在谈及服务组合，指的是QoS~感知的服务组合，从技术角度来看，其通常分为两个阶段：
第一个阶段是抽象组合服务设计阶段，这一阶段主要是根据消费者的功能性需求，设计出一套业务方案，该方案通常由多个功能不同的抽象服务组成，每一个抽象服务代表一个功能模块，且其通常会有一组可执行的备选服务与之对应（候选服务集合，该集合中的原子服务可完成抽象服务的功能，其是抽象服务的一种具体实现，区分它们的一个重要指标是服务质量），这些抽象服务共同完成用户的需求；
第二个阶段是服务选择阶段，用户需要指定对QoS~的约束，以及对QoS~的偏好（通常需要是以权重的形式体现），然后组合服务代理为每一个抽象服务，在其对应的候选服务集合中选择一个原子服务与之绑定，形成一个增值服务，也即组合服务，最终将其返回给消费者，其一定是满足QoS~约束且QoS~属性值加权求和最高的。

现有工作基本上都是在研究如何高效的根据消费者对QoS的偏好选出一个QoS最优的组合服务。但是消费者的需求需求可能是多变的，当消费者改变自己的QoS~偏好时，现有的工作无法快速的对此情况做出响应。除此之外，这些工作都假设各个Web~服务之间是相互独立的，然而在实际应用中，服务与服务之间通常是存在着QoS关联关系的，比如有商业合作关系的服务提供商，如果同时调用它们所提供的服务，那么得到的组合服务的价格会降低。如果忽略了服务之间存在的QoS~关联关系对最终组合服务的服务质量起的作用，有可能导致组合服务代理返回给消费者的组合服务并不是最优的。并且，随着近年来越来越多智能移动设备（如无人勘测车、无人机）的涌现，部署在这些设备上的软件也逐渐以Web~服务的方式提供，而由于这些设备的移动性，通常也会使得部署的Web~服务同样具有了移动的特性，从而导致该服务与其他Web~服务存在的QoS~关联值会随着服务提供者位置的变化而变化，对于此种情况，现有的工作也没有充分的考虑。因此，由于这些问题的存在，使得传统的服务选择方法面临着诸多新的挑战：

\begin{enumerate}

    \item 如果用户的偏好多变，或者对于同一个请求，如果有多个不同用户同时请求，我们如何快速的进行响应；

    \item 在不同抽象Web~服务的候选服务列表中，如果存在多个Web~服务之间有QoS~ 关联，我们应该如何处理；

    \item 在抽象Web~服务的候选服务列表中，如果存在移动Web~服务，我们又该如何应对。

\end{enumerate}

\section{研究现状}\label{S:SEC_StateOfArt}


目前主流的Web~服务组合方法主要包括以下两类：基于语义的服务组合方法以及基于工作流的服务组合方法。

\begin{itemize}

    \item 基于语义的服务组合不同于传统的服务组合,它利用本体（Ontology）来描述Web服务，然后通过这些带有语义信息的描述实现Web服务的自动发现，调用和组合。每个语义Web~服务的输入参数,输出参数都是通过某特定领域的Ontology的概念来表示的，根据输出参数和输入参数之间的匹配关系进行服务组合，同时在组合过程中生成流程模板而不需要用户预先自定义.基于语义的自动服务组合方法主要可以分为两类：AI 规划~\cite{sirin2004htn,kun2009markov}~ 和图搜索~\cite{rodriguez2011automatic,liang2005and}~。
        1）AI 规划：该方法通过找到一个活动序列,使得初始状态按照该活动序列执行可以得到最后的目标状态；
        2）图搜索:该方法首先是构造一个服务依赖图,在构造依赖图的时候可以用一些优化方法减小依赖图的规模;然后当用户请求到来时,通过图遍历算法（比如启发式规则,贪心算法等）生成一个服务组合方案。

    \item 基于工作流的服务组合方法：工作流是针对工作中具有固定程序的常规活动而提出的一个概念。在此种方法中，以工作流模型作为定义Web~ 服务流程模板的工具，在流程定义阶段，生成抽象流程模板，也即前文提到的抽象组合服务模型，在实现阶段，为抽象组合服务模型中的每一个抽象服务选取一个候选原子Web~服务准备绑定，最终将抽象组合服务模型转换为由原子Web~服务组成的增值服务，也即组合服务，并在该组合服务被执行前完成绑定工作。在众多基于工作流模型的组合方法中，典型的方法有基于BPEL4WS（Business Process Execution Language for Web Service,~BPEL）的Web~服务组合。基于工作流的技术是属于静态的Web 服务组合技术，其Web~服务组合模式在服务组合的第一个阶段一流程形式给定。基于工作流的Web服务组合技术可以重用工作流领域的研究成果，一些组合的性质可以得到很好的验证，而且相对于动态Web~服务组合而言，基于工作流的服务组合在实现上更加方便~\cite{stein2009flexible,deng2014service,yu2013efficient,alrifai2009combining}~。 本文的工作就是基于工作流的服务组合方法。

\end{itemize}

依据服务组合中所采取的服务选择策略不同，可以将现有的Web服务策略分为三种，即局部最优策略、全局最优策略以及混合策略。

\begin{itemize}

\item 局部最优策略的基本思想是：分别考察各个抽象服务的候选服务集合，对其中的原子服务的各个QoS属性值进行加权求和以及进行排序，并以此为依据，分别从每个候选服务集合中，为抽象组合服务中的每一个抽象服务，选择一个满足局部约束条件限制，且加权和最大的原子服务来构建组合服务。其核心是针对抽象组合服务中的每个抽象服务，对能够完成该抽象服务功能的所有原子服务进行选取，找到能够实现单个抽象服务，且QoS~最优的原子服务。然而，该策略由于没有考虑全局QoS~ 约束，因此虽然所选的单个原子服务能够满足用户的需求，但是生成的组合服务并不一定是最优的，也不一定满足用户对组合服务的全局QoS~约束。它只能保证在单个抽象服务上是最优的，但是并不能保证得到的组合服务是全局最优的~\cite{sun2011qssa,sgwang2011gdecomqos,alrifai2009scalable}~。

\item 全局最优策略的基本思想是：着眼于整个抽象组合服务，使得组合服务整体的QoS~满足给定的约束或达到预定的优化目标，因此具体服务的选择需要总和考虑各个具体服务的聚合效果。全局最优策略考虑了全局QoS~约束，所获得的解释满足QoS 约束的最优解，但其计算复杂，尤其在动态Web~环境和试试需求场景下，需要寻求高效率且高性能的Web~服务选择算法支持~\cite{shliu2007gaqos}~。

\item 混合策略的基本思想是：融合局部策略和全局策略的优点，先采用局部最优策略在每个抽象服务集合中过滤其中的具体服务，再由全局最优策略从未筛选掉的候选服务集合中进行服务选择。采用混合策略，通常利用局部最优策略来缩减组合服务的求解空间，利用全局最优策略来把握组合服务的QoS，它所产生的解释满足局部约束和全局约束的全局QoS~最优的解，但是采用该策略所涉及的服务选择算法比较复杂~\cite{alrifai2009combining}~。
\end{itemize}

局部和全局策略各有各的优势，但它们在服务选择过程中都将抽象服务所对应的候选服务集合中的所有服务纳入选择范围，在候选服务集合中具体服务数量较多的情况下，此两种方法的选择效率较低。
利用传统的混合策略，虽然可以缩减候选服务的数量，但是缩减算法比较难设计。有学者发现，在局部搜索时，并不需要遍历所有的候选服务，比如在候选服务列表中存在两个服务$a$ 与$b$，如果服务$a$在其所有QoS属性上的值都比$b$的好，那么$b$ 就一定不会出现在全局QoS 最优的组合服务中，利用这个发现，我们可以在局部搜索的时候，不选择那些QoS值较差的候选服务，从而能够有效的减少在局部搜索的时间。对于该发现，有学者引入了数据库查询中的skyline 概念，利用skyline中的``支配关系''，我们可以移除候选服务中所有非skyline服务，从而大大缩小了服务选择的范围，进而提供了服务组合的效率。Skyline服务集合中包含了所有不被其他候选服务``支配''的服务，因而可以保证服务选择结果的完备性。
文献~\cite{alrifai2010selecting}~ 中，作者首先利用Skyline 缩减每个候选服务中的具体服务数量，然后采用k-means算法对候选服务集合中的具体服务进行聚类，并通过混合整数规划方法从聚类结果中选择能够代表整个候选集合中服务的质量水平（Quality Level），然后将得出的质量水平作为局部约束来进行服务选择。
文献~\cite{jwu2010skyline}~针对Web环境的动态特性，如服务的QoS改变，新服务的加入，原有服务的失效等情况，提出了一种能够有效定位发生变化的服务与Skyline服务关系的模型，并能够定位它们之间的关系。对于每个抽象服务所对应的候选服务集合，我们可以把其中的Skyline服务可以在用户的请求到达前提前计算出来~\cite{alrifai2010selecting}~，因此利用基于Skyline 的混合策略相比较于传统的混合策略，其有着易于实现且性能较好的优点。但是，现有的做法基本上都是基于该策略根据用户的请求返回一个QoS最优的组合服务。
这种做法仍有一些缺点：
1）对于普通的组合服务用户来说，让他一次性准确的将自己对QoS偏好转化为以数字形式呈现的权重是非常困难的，因此，当他发现自己的权重不合适的时候，会重新发起请求，并附以新的QoS 偏好，然后组合服务代理需要重新遍历所有候选服务集合中的Skyline服务，并计算出满足用户约束的QoS 最优组合服务，然后返回给用户。但当用户的QoS 偏好经常变化的时候，组合服务代理的计算开销无疑会增大，同时用户的总等待时间也会变得很长；
2）当多个用户发起同样的请求时，组合服务代理仍需为这些具有相同请求的用户，分别计算出满足各自约束的QoS最优组合服务。

针对这个问题，有学者将Skyline的概念应用到候选组合服务集合中，提出了组合服务Skyline（Composite Service Skyline,~CSKY）的概念。候选组合服务集合是由所有可能的组合服务构成的，比如：我们有一个抽象组合服务，其中包含着3 个抽象服务，每一个抽象服务对应着一个候选服务集合，每一个候选服务集合中有5 个候选具体服务，那么我们一共有$5\times 5\times 5=125$个组合服务，对这个例子来说，这125 个组合服务就构成了候选组合服务集合，满足用户需求的组合服务一定是从候选组合服务集合中选出的。Skyline组合服务集合中包含了不被其他候选组合服务``支配''的组合服务。对于相同抽象组合服务模型的请求，无论用户的QoS偏好如何，一定可以在Skyline组合服务集合中找到满足其约束的QoS最优的组合服务。利用组合服务Skyline，大大缩减了候选组合服务的数量，提高了服务选择的效率。

服务之间存在的关联关系在近年来引起了学者的注意。在文献~\cite{barakat2013efficient}~中，作者服务之间的关联关系分为三类，分别为：服务之间的次序关联（Flow correlation）、服务之间的兼容性关联（Compatibility correlation）以及服务之间的QoS关联（QoS correlation）:

\begin{itemize}

\item 服务之间的次序关联：这是最常见的一种关联，它被用来约束一个组合服务中，服务的执行次序。这种关联关系即可以通过业务的逻辑来体现，比如，我们在购物的时候选择先收货再付款，也可以通过服务之间数据和资源的传递顺序来体现，比如一个服务的输入依赖于另一个服务的输出。在基于工作流的服务组合方法中，通过构造一个工作流模型，很容易的将这种关联表达出来；

\item 服务之间的兼容性关联：这种关联通常用来判断两个服务是否可以无差错的一起工作。引起兼容性问题的一个常见原因是服务接口之间的语义不匹配~\cite{guo2010correlation,lecue2011seeking}~，通过计算服务之间输入输出参数的相似度，可以判断这些服务是否可以很好的兼容。另一个常见原因是由于供应商的商业政策，限制了某些具体服务的组合~\cite{li2007high,wu2014correlation}~，但是本文并不考虑服务之间的兼容性关联；

\item 服务之间的QoS关联：通常QoS关联是指，一个具体服务的QoS 值被另一个同时选中的具体所影响。QoS关联在现实生活中很常见，比如一个出行组合服务中，如果我们通过阿里去啊 \footnote{http://www.alitrip.com/}在线旅游服务预订南方航空\footnote{http://www.csair.com/}的机票，会得到一个折扣，使得机票的价格比其实际的价格要低。QoS关联对组合服务的选择结果有着重要的影响，如果忽略对QoS关联的考虑通常会导致最终的解并不是最优解~\cite{deng2014service,ye2008service,barakat2012efficient,zhang2014correlation}~。
    虽然QoS 关联很重要，但是近年来对其的研究工作还很有限。本文所考虑的服务之间的关联关系就是QoS 关联。

\end{itemize}

随着越来越多提供Web服务功能的智能移动设备（如无人机、无人勘测车等）涌现，以及调用Web 服务的设备也逐渐转移到手机等智能设备上。现有的工作基本上分为两类：一类是从调用者的角度出发，调用者使用智能设备来调用Web 服务，由于移动通信基站分布的不均匀，导致无线信号分布同样会不均，从而使得被调用Web 服务的响应时间产生不确定性，导致服务组合面临新的挑战~\cite{deng2014mobility}~；还有一类是从服务提供者的角度出发，服务提供者处于移动的环境中。本文假设调用者处于稳定的网络环境中，而服务提供者是处于移动的环境中，由于这个原因导致某些服务的QoS关联值是变化。很多工作无法很好的处理动态环境的服务选择问题，通常采取的策略是重新计算~\cite{alrifai2010selecting}~，虽然文献~\cite{jwu2010skyline}~考虑了QoS值动态变化的时候如何快速计算skyline服务，但是他们并没有考虑QoS关联值变化的时候该如何处理。

目前还没有学者研究如何在移动环境中，且服务之间存在QoS关系的情况下，计算组合服务Skyline。

\section{本文工作}

在课题研究期间相关项目的支持下，以及在对Web服务组合理论进行了深入研究后，为了解决上述提到的问题，本文的主要工作如下：

\begin{enumerate}

    \item 我们提出了在考虑QoS关联关系情况下如何计算组合服务Skyline的问题，对该问题进行建模，并提出了新的服务模型来描述具有QoS关联关系的服务。

    \item 我们依据混合策略进行组合服务Skyline的计算，我们提出了若干关联剪枝准则，削减每个候选服务集合中服务的数量，从而提高我们的算法时间效率。

    \item 我们考虑了QoS关联值动态变化的情况，提出了QoS关联值安全范围的概念，并对QoS关联值的变化在安全范围内以及安全范围外分类讨论，在一定程度上降低了重新计算组合服务Skyline以及重新削减每个候选服务集合中服务数量的频率。

    \item 我们设计一系列实验来分别验证我们方法的有效性以及效率。

\end{enumerate}

\section{本文组织}

本论文的主要内容是考虑QoS关联的组合服务Skyline计算，并考虑了对移动环境下可能导致的QoS关联值变化的情况的处理。论文包括5章，第1章作为全文的绪论，提出了论文的研究背景和概要结构。其他4章的概要内容总结如下：

第二章：相关工作

本章主要介绍了Web服务的相关技术与概念，Skyline的概念，组合服务Skyline的概念与相关工作，以及支持QoS关联的服务选择相关工作。

第三章：支持QoS关联的组合服务Skyline计算

这一部分主要介绍了支持QoS关联的组合服务Skyline计算算法，在这一部分提出了一种支持QoS关联的服务模型，并基于该模型设计一种支持QoS关联的组合服务Skyline计算方法，我们还设计了若干剪枝标准来提高我们方法的效率。

第四章：移动环境下支持QoS关联的组合服务Skyline计算

本章主要介绍了当QoS关联值发生变化的时候，如何高效的计算组合服务Skyline。我们在本章提出了安全值范围的概念，帮助我们提高组合服务Skyline的计算效率。

第五章：总结与展望

主要对全文的工作进行总结，然后根据本文已经开展的工作，展望下一步的研究内容。




